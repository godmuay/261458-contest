import os
import pandas as pd
import tensorflow as tf
from tensorflow.keras import models
import cv2
import numpy as np

# üìå ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏†‡∏≤‡∏û
def absolute_difference(tensors):
    return tf.abs(tensors[0] - tensors[1])

# üöÄ ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏°‡πÄ‡∏î‡∏•
model = models.load_model("compare_model_besttt.keras", custom_objects={"absolute_difference": absolute_difference})

# üìÇ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏û‡∏≤‡∏ò‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå CSV ‡πÅ‡∏•‡∏∞‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö test.py
script_dir = os.path.dirname(os.path.abspath(__file__))  # ‡∏´‡∏≤‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà test.py ‡∏≠‡∏¢‡∏π‡πà
csv_file = os.path.join(script_dir, "test.csv")  # `test.csv` ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô
image_folder = os.path.join(script_dir, "Test Images")  # `Test_Images` ‡∏Å‡πá‡∏≠‡∏¢‡∏π‡πà‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô

# ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå CSV ‡πÅ‡∏•‡∏∞‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏£‡∏π‡∏õ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á
if not os.path.exists(csv_file):
    print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå CSV: {csv_file}")
    exit()

if not os.path.exists(image_folder):
    print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏£‡∏π‡∏õ: {image_folder}")
    exit()

print(f"‚úÖ ‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå CSV: {csv_file}")
print(f"‚úÖ ‡∏û‡∏ö‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏£‡∏π‡∏õ: {image_folder}")

# üîÑ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ß‡πà‡∏≤‡∏†‡∏≤‡∏û‡πÑ‡∏´‡∏ô‡∏î‡∏π‡∏ô‡πà‡∏≤‡∏Å‡∏¥‡∏ô‡∏Å‡∏ß‡πà‡∏≤
def predict_best_image(model, img1_path, img2_path):
    img1 = cv2.imread(img1_path)
    img2 = cv2.imread(img2_path)

    if img1 is None or img2 is None:
        print(f"‚ùå Error: ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå {img1_path} ‡∏´‡∏£‡∏∑‡∏≠ {img2_path}")
        return None

    img1 = cv2.resize(img1, (128, 128)) / 255.0
    img2 = cv2.resize(img2, (128, 128)) / 255.0

    img1 = np.expand_dims(img1, axis=0)
    img2 = np.expand_dims(img2, axis=0)

    prediction = model.predict([img1, img2])

    return 1 if prediction[0][0] < 0.5 else 2
  # ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ 1 ‡∏ñ‡πâ‡∏≤ img1 ‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤, 2 ‡∏ñ‡πâ‡∏≤ img2 ‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤

# üìå ‡∏≠‡πà‡∏≤‡∏ô‡πÑ‡∏ü‡∏•‡πå CSV
df = pd.read_csv(csv_file)

# üîÑ ‡∏ß‡∏ô‡∏•‡∏π‡∏õ‡∏ó‡∏∏‡∏Å‡πÅ‡∏ñ‡∏ß‡πÉ‡∏ô `test.csv`
for index, row in df.iterrows():
    img1_filename = row["Image 1"]
    img2_filename = row["Image 2"]

    img1_path = os.path.join(image_folder, img1_filename)
    img2_path = os.path.join(image_folder, img2_filename)

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏†‡∏≤‡∏û‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏£‡∏¥‡∏á
    if not os.path.exists(img1_path) or not os.path.exists(img2_path):
        print(f"‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå‡∏†‡∏≤‡∏û: {img1_path} ‡∏´‡∏£‡∏∑‡∏≠ {img2_path}")
        df.at[index, "Winner"] = "Error"
        continue

    # ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤
    winner = predict_best_image(model, img1_path, img2_path)
    
    if winner is not None:
        df.at[index, "Winner"] = winner
        print(f"‚úÖ {img1_filename} üÜö {img2_filename} ‚Üí Winner: {winner}")

# üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏•‡∏á‡πÉ‡∏ô `test.csv`
df.to_csv(csv_file, index=False)
print("\n‚úÖ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏•‡∏á‡πÉ‡∏ô‡πÑ‡∏ü‡∏•‡πå test.csv ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢!")


